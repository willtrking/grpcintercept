// Code generated by protoc-gen-go.
// source: account.proto
// DO NOT EDIT!

/*
Package protobuf is a generated protocol buffer package.

It is generated from these files:
	account.proto

It has these top-level messages:
	Account
*/
package protobuf

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
const _ = proto.ProtoPackageIsVersion1

// Account object
type Account struct {
	Id    int64  `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Name  string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Email string `protobuf:"bytes,3,opt,name=email" json:"email,omitempty"`
}

func (m *Account) Reset()                    { *m = Account{} }
func (m *Account) String() string            { return proto.CompactTextString(m) }
func (*Account) ProtoMessage()               {}
func (*Account) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func init() {
	proto.RegisterType((*Account)(nil), "protobuf.Account")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion1

// Client API for AccountManagement service

type AccountManagementClient interface {
	// Retrieve an account by ID
	GetAccount(ctx context.Context, in *Account, opts ...grpc.CallOption) (*Account, error)
	// Create an account
	CreateAccount(ctx context.Context, in *Account, opts ...grpc.CallOption) (*Account, error)
}

type accountManagementClient struct {
	cc *grpc.ClientConn
}

func NewAccountManagementClient(cc *grpc.ClientConn) AccountManagementClient {
	return &accountManagementClient{cc}
}

func (c *accountManagementClient) GetAccount(ctx context.Context, in *Account, opts ...grpc.CallOption) (*Account, error) {
	out := new(Account)
	err := grpc.Invoke(ctx, "/protobuf.AccountManagement/GetAccount", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountManagementClient) CreateAccount(ctx context.Context, in *Account, opts ...grpc.CallOption) (*Account, error) {
	out := new(Account)
	err := grpc.Invoke(ctx, "/protobuf.AccountManagement/CreateAccount", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for AccountManagement service

type AccountManagementServer interface {
	// Retrieve an account by ID
	GetAccount(context.Context, *Account) (*Account, error)
	// Create an account
	CreateAccount(context.Context, *Account) (*Account, error)
}

func RegisterAccountManagementServer(s *grpc.Server, srv AccountManagementServer) {
	s.RegisterService(&_AccountManagement_serviceDesc, srv)
}

func _AccountManagement_GetAccount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error) (interface{}, error) {
	in := new(Account)
	if err := dec(in); err != nil {
		return nil, err
	}
	out, err := srv.(AccountManagementServer).GetAccount(ctx, in)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func _AccountManagement_CreateAccount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error) (interface{}, error) {
	in := new(Account)
	if err := dec(in); err != nil {
		return nil, err
	}
	out, err := srv.(AccountManagementServer).CreateAccount(ctx, in)
	if err != nil {
		return nil, err
	}
	return out, nil
}

var _AccountManagement_serviceDesc = grpc.ServiceDesc{
	ServiceName: "protobuf.AccountManagement",
	HandlerType: (*AccountManagementServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetAccount",
			Handler:    _AccountManagement_GetAccount_Handler,
		},
		{
			MethodName: "CreateAccount",
			Handler:    _AccountManagement_CreateAccount_Handler,
		},
	},
	Streams: []grpc.StreamDesc{},
}

var fileDescriptor0 = []byte{
	// 152 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe2, 0xe2, 0x4d, 0x4c, 0x4e, 0xce,
	0x2f, 0xcd, 0x2b, 0xd1, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x00, 0x53, 0x49, 0xa5, 0x69,
	0x4a, 0xce, 0x5c, 0xec, 0x8e, 0x10, 0x29, 0x21, 0x3e, 0x2e, 0xa6, 0xcc, 0x14, 0x09, 0x46, 0x05,
	0x46, 0x0d, 0xe6, 0x20, 0x20, 0x4b, 0x48, 0x88, 0x8b, 0x25, 0x2f, 0x31, 0x37, 0x55, 0x82, 0x09,
	0x28, 0xc2, 0x19, 0x04, 0x66, 0x0b, 0x89, 0x70, 0xb1, 0xa6, 0xe6, 0x26, 0x66, 0xe6, 0x48, 0x30,
	0x83, 0x05, 0x21, 0x1c, 0xa3, 0x26, 0x46, 0x2e, 0x41, 0xa8, 0x29, 0xbe, 0x89, 0x79, 0x89, 0xe9,
	0xa9, 0xb9, 0xa9, 0x40, 0xf3, 0x4c, 0xb8, 0xb8, 0xdc, 0x53, 0x4b, 0x60, 0xa6, 0x0b, 0xea, 0xc1,
	0xec, 0xd4, 0x83, 0x0a, 0x49, 0x61, 0x0a, 0x29, 0x31, 0x08, 0x99, 0x73, 0xf1, 0x3a, 0x17, 0xa5,
	0x26, 0x96, 0xa4, 0x92, 0xa8, 0x31, 0x89, 0x0d, 0x2c, 0x66, 0x0c, 0x08, 0x00, 0x00, 0xff, 0xff,
	0x5d, 0xdb, 0x94, 0xa5, 0xeb, 0x00, 0x00, 0x00,
}
